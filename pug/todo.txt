now:
	derive mdichildframe from pugframe also
		add frames to applist
		sceneFrame in set_scene
	old scene remains after change scene... refresh scene window
 	name in project and scene 
		win title just scene
	create menu in parentmdi
	set menus in childmdis
 	default positions for child frames	
 		
current version:
	
Finalize:
	Open/New project	
	html tutorial
		create project
		create scene
		create sprites
		add components
	create zip tarball exe?

fun stuff:
	so many frickin components to make :) REVIEW POWERPACK
		demo components
		fade in fade out
		spawn point
			attributes
				frequency
				variance
				object
				offset
				match_rotation
				add_velocity
				max_spawns
			methods		
				spawn_timer	
				spawn (object, location)
	

bugs: 
	leftover items in scene graph after deleting both layers
	sometimes selections still not showing up
	crash - selecting an object while changing selectionwin to another view 

later: 
	open console window
	font size for scene class
	make opioid not respond during modal stuff
	set_attribute callback for template
		archetype
			update scenegraph
			inquire about name
		option to cancel
		intercept at base level?
	make objects imports absolute
	editable code_storage
	code_storage special gname treatment only on GnamedObjects
	no autocode if no data
	warn about duplicate gnames
	multiple selection
	easy import for scenes and objects would be nice, too
	custom menu creation
		in templates:
		'menus': {'__order__':[],name1:[]...,name2:[]...}
	make pugwindow faster by making labels a separate sizer?
	key/input event registry in scene
	create groups gui for scene	
	create get_groups function for pugsprite... checks against scene groups
	collision
	kb control in dropdowns
		enter in dropdowns to apply
		needs to post event
	tooltips for component tree
	validators for pug data
	option to open editor from pugwindow
	move as much editor code out of objects as possible
		assign templates and code_storage stuff in other file
	function to open browser for tutorial
	sort component browser
	make very simple editor interface... 
		ctrl-c, ctrl-v, ctrl-x, delete (on scenegraph too... maybe pass off)
		grid and snap-to
	add soupascript functionality to pug.base_object
		^ indicates gnamed object
		* indicates python code
		way to indicate filter?
	make subobjects work for code storage... move components to end
	only create one dummy node
		make dummyList a dummyDict... class: dummy
		check for class before creating dummy
	code_storage list ala templates... no functionality in object
	create example out of opioid bricks
		write basic tutorial - Using pug as a level builder
	app = showPugFrame/getPugFrame should return lists
	log all exceptions that are glossed over by automation
	make standalone work right
		app should not auto-close when no windows and no projectwindow
			or frame should automatically create app if none exists
		pug.frame() should work (on principle)
		pug.frame(obj) should work WITHOUT creating app
	file agui
		allow text entry in 
		show absolute path in tooltip
	refactor scene and object dict into utils, only store strings in dropdowns
	code_storage_exporter.is_exportable
		check lists recursively
		check dicts for keys and items
		keep list of checked stuff... recursive = NO!
	make component system something you can add on later
		not necessary to derive
	auto-refresh -- leave the attribute being editted alone
	project windows... show all frames available
	particles
	list agui
		create accessor object
			listob.item1
			dictob.str(key)
	
not understand:

looks:
	
r&d:
	integrate pycrust for editor
	
useability:
	code_storage dict features: 
		refactor get_storage_info... totally unneccessary
		derive class from CodeStorageExporter instead of customfunc
	allow template to specify 'persist' so as not to use proxies
	allow Routine aguidict 'argstring' instead of arguments
	add refresh object option to pug view - to refresh actual puglist
	make subobject subobject_small and subobject show ala components
	list,dictionary,and tuple attribute guis can also work like components
	make code_export functions and dicts separate from obj's?
		reason would be to take out of release version
	
big needs later... help from outside?:
	undo/redo system
	
Opioid Questions:
	how to get exception messages
	closing a vector pug causes crash
	order of nodes in a given layer is semi-random
	wait (hourglass) mode for Opioid window - arrow looks funny after change
	 
Python Questions:
	Other ways to load/scan all modules in a folder
	How to properly wait for another thread to complete something
	How to register a callback without storing a reference
	How to keep a view of objects without keeping them alive... ref system?

	talk about ways to separate runtime game code
		study egg system
	nice way to register/add components to a project
		wait for 3k
	how to doc component attributes
		use properties, look at class
	singletons
		don't need to be marked global
		could be created at search time
			
Wx Questions:
	don't auto-scroll on scrolledPanel
		intercept focus event?	
	how to turn OFF a damn tooltip
	component add and browse buttons sizeability
	weird overlap of subobject labels
	how do I get default values of font_sizes and colors and shit